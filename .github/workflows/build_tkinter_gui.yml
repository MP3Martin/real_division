name: Build Tkinter GUI

on:
  release:
    types: [created]

jobs:
  disable-debug:
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: Disable debug
      uses: jacobtomlinson/gha-find-replace@v2
      with:
        find: "debug_enabled = True"
        replace: |
          debug_enabled = False
          print("Made by HexagonCore\nFounded by MP3Martin\nWorking thanks to Tkinter and PyInstaller")
        regex: false
    - uses: actions/upload-artifact@v2
      with:
        name: gui-py-without-debug
        path: gui.py
  build:
    needs: [disable-debug]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'windows-latest', 'ubuntu-latest', 'macos-latest' ]

    steps:
    - uses: actions/checkout@v2    
    - uses: actions/download-artifact@v2
      with:
        name: gui-py-without-debug
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - run: pip install -r requirements.txt pyinstaller
    - run: pyinstaller --onefile -w gui.py

    - name: ZIP Linux
      if: ${{ runner.os == 'Linux' }}
      run: |
        mv dist/* dist/real_division_Tkinter-GUI-Linux-x64
        cd dist/
        zip real_division_Tkinter-GUI-Linux-x64.zip *
        cd ..
        # rm -r dist/real_division_Tkinter-GUI-Linux-x64

    - name: ZIP Windows
      if: ${{ runner.os == 'Windows' }}
      run: |
        cd dist/
        ren gui.exe real_division_Tkinter-GUI-Windows-x64.exe
        7z a -tzip real_division_Tkinter-GUI-Windows-x64.zip *
        # del real_division_Tkinter-GUI-Windows-x64.exe
        cd ..

    - name: ZIP macOS
      if: ${{ runner.os == 'macOS' }}
      run: |
        cd dist/
        mv gui.app real_division_Tkinter-GUI-macOS-x64.app
        rm gui
        zip real_division_Tkinter-GUI-macOS-x64.zip * -r
        rm -r real_division_Tkinter-GUI-macOS-x64.app
        cd ..

    - uses: softprops/action-gh-release@v1
      with:
        files: dist/*
  cleanup:
    needs: [disable-debug, build]
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: gui-py-without-debug
